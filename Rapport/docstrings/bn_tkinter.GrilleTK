Help on class GrilleTK in bn_tkinter:

bn_tkinter.GrilleTK = class GrilleTK(bn_grille.Grille, tkinter.Frame)
 |  Crée un widget pour afficher et gérer les grilles
 |  
 |  Method resolution order:
 |      GrilleTK
 |      bn_grille.Grille
 |      tkinter.Frame
 |      tkinter.Widget
 |      tkinter.BaseWidget
 |      tkinter.Misc
 |      tkinter.Pack
 |      tkinter.Place
 |      tkinter.Grid
 |      builtins.object
 |  
 |  Methods defined here:
 |  
 |  __init__(self, xmax=10, ymax=10, taille_bateaux=[5, 4, 3, 3, 2], parent=None, cursor='arrow')
 |  
 |  affiche(self, coules=[])
 |      Affiche le canvas
 |  
 |  affiche_adverse(self, grille=None)
 |      Affiche le canvas en coloriant les bateaux adverses
 |  
 |  case2coord(self, case)
 |      Convertit les coordonnées de cases en coordonées de graphiques
 |  
 |  clear_canvas(self)
 |      Réinitialise le canvas
 |  
 |  color_bateaux_adverse(self, grille=None)
 |      Colorie les bateaux adverse sur la grille
 |  
 |  color_bateaux_coules(self, coules=[])
 |      Colorie les cases des bateaux coulés
 |  
 |  color_case(self, case, couleur)
 |      Colorie une case
 |  
 |  color_noires(self)
 |      Colorie une case sur deux
 |  
 |  coord2case(self, x, y)
 |      Convertit les coordonnées graphiques en coordonées de cases
 |  
 |  init_canvas(self)
 |      Dessin initial de la grille
 |  
 |  marque_case(self, case)
 |      Marque une case touchée ou manquée
 |  
 |  marque_cases(self)
 |      Marque toutes les cases de la grille suvant leur état
 |
 |  text_case(self, case, symbole)
 |      Met un symbole dans une case
 |
 |  ----------------------------------------------------------------------
 |  Methods inherited from bn_grille.Grille:
 |  
 |  add_bateau(self, bateau)
 |      Ajoute un bateau dans la grille
 |      et met à jour les états des cases adjacentes
 |  
 |  add_bateau_alea(self, taille)
 |      Ajoute un bateau aléatoire de taille donnée
 |  
 |  adjacent(self, case)
 |      Retourne la liste des cases vides adjacentes à case
 |      dans l'ordre : DROITE, GAUCHE, HAUT, BAS
 |  
 |  case_max(self, affiche=False)
 |      Détermine la case qui contient le plus de bateaux et
 |      regardant sur chaque case le nombre de bateaux possibles
 |  
 |  case_max_all(self, affiche_all=False)
 |      Détermination de la case optimale par énumération de
 |      toutes les répartitions possibles de bateaux
 |  
 |  case_max_echantillons(self, nb_echantillons=100, affiche=False)
 |      Calcul des probabilités sur chaque case vide de contenir
 |      un bateau. Retourne la case la plus probable en essayant
 |      différents arrangements des bateaux restants
 |  
 |  case_max_touchee(self, case_touchee)
 |      Retourne le nombre de bateaux possibles
 |      sur chaque case adjacentes à case (qui vient d'être touchée)
 |  
 |  copie_grille_tmp(self)
 |      Crée une copie temporaire de la grille
 |  
 |  elimine_cases(self)
 |      Élimine les cases dans lesquelles
 |      le plus petit bateau ne peut pas rentrer
 |  
 |  elimine_cases_joueur(self)
 |      Élimine les cases dans lesquelles
 |      le plus petit bateau ne peut pas rentrer
 |      Version pour le joueur
 |  
 |  fini(self)
 |      Renvoie True si tous les bateaux ont été coulés
 |  
 |  get_max_space(self, case, direction=(1, 1), face=True)
 |      Renvoie la plus grande place possible sur cette case
 |      dans une direction
 |  
 |  get_possibles(self, affiche=False, tri=False)
 |      Crée la liste des bateaux possibles démarrant sur chaque case
 |      ainsi que la liste des cases et directions possibles pour
 |      chaque bateau
 |  
 |  get_taille_max(self)
 |      Met à jour la taille du bateau le plus grand restant
 |  
 |  get_taille_min(self)
 |      Met à jour la taille du bateau le plus petit restant
 |  
 |  init_bateaux_alea(self)
 |      Initialise une grille avec des bateaux aléatoires
 |  
 |  is_touche(self, case)
 |      Teste si la case contient un bateau
 |  
 |  make_all(self, gtmp, affiche_all=False)
 |      Crée toutes les répartitions possibles de bateaux
 |      de manière récursive
 |  
 |  reinit(self)
 |      Réinitialisation de la grille
 |  
 |  rem_bateau(self, taille)
 |      Enlève le bateau de taille taille de la liste
 |  
 |  test_bateau(self, bateau)
 |      Test si le bateau est valide (rentre bien) dans la grille
 |  
 |  test_case(self, case)
 |      Teste si une case est valide (dans la grille) et vide
 |  
 |  update(self)
 |      Met à jour les paramètres de la grille
 |  
 |  update_vides(self)
 |      Met à jour la liste des cases vides
